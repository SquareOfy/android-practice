<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:paddingRight="12dp"

    android:scrollbarSize="10dp"
    android:scrollbarStyle="insideInset"
    android:scrollbars="vertical"

    tools:context=".MainActivity">
<LinearLayout
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">
    <androidx.appcompat.widget.Toolbar
        android:id="@+id/toolbar"
        android:layout_width="match_parent"
        android:layout_height="?attr/actionBarSize"
        android:background="?attr/colorPrimary"
        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
        app:title="그외의 텍스트" />


    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal">

        <TextView
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:gravity="center"

            android:text="AutoCompleteTextView : " />
        <!-- AutoCompleteTextView에 : 사용자가 입력하는 동안 추천 항목을 자동으로 제안
    AutoCompleteTextView에 데이터를 제공하기 위해 ArrayAdapter를 사용
String[] items = {"Apple", "Banana", "Cherry", "Date", "Fig", "Grape"};
ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_dropdown_item_1line, items);
AutoCompleteTextView autoCompleteTextView = findViewById(R.id.autoCompleteTextView);
autoCompleteTextView.setAdapter(adapter);
    -->
        <AutoCompleteTextView
            android:id="@+id/autoCompleteTextView"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:hint="검색어를 입력하세요(2자이상)" />
    </LinearLayout>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal">

        <TextView
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:gravity="center"

            android:text="MultiAutoCompleteTextView : " />

        <!--  MulltiAutoCompleteTextView : 사용자가 쉼표(또는 지정한 구분 기호)를 입력하면 자동 완성 목록에서 여러 항목을 선택
String[] items = {"Apple", "Banana", "Cherry", "Date", "Fig", "Grape"};
ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_dropdown_item_1line, items);
MultiAutoCompleteTextView multiAutoCompleteTextView = findViewById(R.id.multiAutoCompleteTextView);
multiAutoCompleteTextView.setAdapter(adapter);
multiAutoCompleteTextView.setTokenizer(new MultiAutoCompleteTextView.CommaTokenizer());
    -->
        <MultiAutoCompleteTextView
            android:id="@+id/multiAutoCompleteTextView"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:hint="검색어를 입력하세요(여러항목): 쉽표로 구분할 수 있습니다" />
    </LinearLayout>

    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"


        android:text="CheckedTextView\n checkMark=?android:attr/listChoiceIndicatorMultiple" />

    <LinearLayout
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"

        android:layout_gravity="center_horizontal"
        android:orientation="vertical">

        <!--CheckedTextView :
          CheckBox뷰와 다르게
         리스트 항목이나 설정 메뉴에서 특정 항목의 선택 여부를 나타내는 데 주로 사용
        -->
        <CheckedTextView
            android:id="@+id/checkedTextView1"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:checkMark="?android:attr/listChoiceIndicatorMultiple"
            android:checked="true"
            android:text="목록1" />

        <CheckedTextView
            android:id="@+id/checkedTextView2"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:checkMark="?android:attr/listChoiceIndicatorMultiple"
            android:gravity="center_vertical"
            android:text="목록2" />
    </LinearLayout>

    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="CheckedTextView\n checkMark=?android:attr/listChoiceIndicatorSingle" />

    <LinearLayout
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center_horizontal"
        android:orientation="vertical">

        <CheckedTextView
            android:id="@+id/checkedTextView3"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:checkMark="?android:attr/listChoiceIndicatorSingle"
            android:checked="true"
            android:text="목록3" />

        <CheckedTextView
            android:id="@+id/checkedTextView4"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:checkMark="?android:attr/listChoiceIndicatorSingle"
            android:text="목록4" />
    </LinearLayout>

    <!-- TextInputLayout :
    EditText와 함께 사용되며, 힌트를 위로 올리거나, 입력 필드의 상태(유효성 검사 결과)에 따라 에러 메시지를 표시할 수 있다
    -->
    <com.google.android.material.textfield.TextInputLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="TextInputLayout 힌트를 위로 올릴 수 있어요">
        <!-- TextInputEditText: TextInputLayout과 함께 사용하도록 설계된 EditText의 서브클래스-->
        <com.google.android.material.textfield.TextInputEditText
            android:layout_width="match_parent"
            android:layout_height="wrap_content" />
    </com.google.android.material.textfield.TextInputLayout>

</LinearLayout>
</ScrollView>